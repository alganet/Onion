#!/usr/bin/env php
<?php


$bin      = 'scripts/onion.embed';
$pharFile = 'onion.phar';
$src_dirs  = array('src','../GetOptionKit/src');
$phar = new \Phar($pharFile, 0, $pharFile);
$phar->setSignatureAlgorithm(\Phar::SHA1);
$phar->startBuffering();

foreach( $src_dirs as $src_dir ) {
    $src_dir = realpath( $src_dir );
    $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($src_dir),
                            RecursiveIteratorIterator::CHILD_FIRST);
    foreach( $iterator as $path ) {
        if( $path->isFile() ) {
            if( preg_match('/\.php$/',$path->getFilename() ) ) {
                $rel_path = substr($path->getPathname(),strlen($src_dir) + 1);
                $content = php_strip_whitespace( $path->getRealPath() );
                # echo $path->getPathname() . "\n";
                echo "\tcompile " . $rel_path . "\n";
                $phar->addFromString($rel_path, $content);
            }
        }
    }
}


# include executable main startpoint
$content = php_strip_whitespace($bin);
$content = preg_replace('{^#!/usr/bin/env\s+php\s*}', '', $content);
$phar->addFromString($bin, $content);

// require php5.3.2
$path = stream_resolve_include_path('UniversalClassLoader/SplClassLoader.php');
if( ! file_exists( $path ) )
    die('splclassloader not found.');

echo "\tinclude classloader $path\n";
$content = php_strip_whitespace($path);
$phar->addFromString('UniversalClassLoader/SplClassLoader.php',$content);


$stub =<<<"EOF"
#!/usr/bin/env php
<?php
Phar::mapPhar('$pharFile');
require 'phar://$pharFile/UniversalClassLoader/SplClassLoader.php';
\$classLoader = new \\UniversalClassLoader\\SplClassLoader(array( 
        'CLIFramework' => 'phar://$pharFile',
        'GetOptionKit' => 'phar://$pharFile',
        'Onion' => 'phar://$pharFile',
));
\$classLoader->register();
require 'phar://$pharFile/$bin';
__HALT_COMPILER();
EOF;
$phar->setStub($stub);
$phar->stopBuffering();
$phar->compressFiles(\Phar::GZ);
echo "\tcreated: $pharFile\n";
