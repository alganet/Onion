CLI Plan
========

    $ foo help schema
    $ foo schema                    # call Command\SchemaCommand->execute
    $ foo schema init               # call Command\SchemaCommand\InitCommand->execute
    $ foo schema check {ModelName}


    $ foo [app options] 
            subcommand [subcommand options] [arguments]

    $ app [app-opts] <cmd> [cmd-opts] { <cmd> [cmd-opts] {...} } [cmd-args]

    $ <app> [--app-opt] <cmd> [--cmd-opt] [cmd-arg] ...
    $ <app> [--app-opt] <cmd> [--cmd-opt] <subcmd> [--subcmd-opt] [subcmd-arg] ...
    $ <app> [--app-opt] <cmd> [--cmd-opt] <subcmd1> [--subcmd1-opt] <subcmd2> [--subcmd2-opt] [subcmd2-arg] ...
    

- default command.
- option conflicts.
- usage.

    class CLIApplication extends CLIFramework\Application 
    {
        /* application options */
        function options($getopt)
        {
            // ... add options here
        }

        function init()
        {
            $class = 'App\Command\ListCommand';
            $cmd = $this->registerCommand($class);
            $list_cmd = $cmd->registerSubcommand('list');

            $dispatcher = new \CLIFramework\CommandDispatcher( '\\Onion\\Command' );
            $cmd = $dispatcher->registerCommand('BuildCommand');   # command class  => \Onion\Command\BuildCommand
            $cmd = $dispatcher->registerCommand('InitCommand');


            $cmd = $dispatcher->registerCommand('MainCommand');
            $cmd->registerSubcommand('FooCommand');  # subcommand class => \Onion\Command\MainCommand\FooCommand
            $cmd->registerSubcommand('BarCommand');  # subcommand class
        }
    }

    $app = new CLIApplication;
    $cmd = $app->dispatch($argv);
    $cmd->topExecute();

        init app options
        parse app options
        get app arguments

        if first argument is command
            command = dispatch command by arguments
            command -> init options (override options that previous defined.)
            command -> continue parse options
            command -> arguments

            if command has subcommand and first arg is a command
                dispatch command by arguments
            else
                run current command class.
            endif
        else
            run default execute 
        endif
